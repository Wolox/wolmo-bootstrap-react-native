// https://github.com/react-community/react-navigation/issues/458
// once that issue is resolved, the initial loading screen is no longer needed and should be removed
//  in favour of setting the initialRoute as a prop of the navigator

import { <% if (features.tabs) { %>createBottomTabNavigator, <% } %>createStackNavigator<% if (features.drawer) { %>, createDrawerNavigator<% } %> } from 'react-navigation';
import Routes from '@constants/routes';
import { screensNavOptions, mainStackNavConfig<% if (features.tabs) { %>, tabNavConfig<% } %><% if (features.drawer) { %>, drawerNavConfig<% } %><% if (features.login) { %>, loginsStackNavConfig<% } %> } from '@config/navigation';
<%_ if(features.login || features.tabs) { _%>
import { inferRoute } from '@utils/navUtils';
<%_ } _%>
<%_ if(features.login) { _%>
import InitialLoading from '@screens/InitialLoading';
import Login from '@screens/Login';
<%_ } _%>
import Home from '@screens/Home';

<%_ if(features.drawer) { _%>
  const drawerStack = createDrawerNavigator(
    {
      [Routes.Home]: {
        <%_ if (features.tabs) { _%>
          screen: createBottomTabNavigator(
            {
              ...inferRoute({ Tab1: Home }),
              ...inferRoute({ Tab2: Home })
            },
            tabNavConfig
          ),
          <%_ } else { _%>
          screen: Home,
          <%_ } _%>
          navigationOptions: screensNavOptions[Routes.Home]
      }
      /*
      This is where you should add screens to the Drawer, here is an example how to.
      ...inferRoute({ NewScreenExample }) */
    },
    {
      drawerNavConfig
    }
  );

<%_ } _%> 

<%_ if (features.login) { _%>
const loginStack = createStackNavigator(
  {
    ...inferRoute({ Login })
    /*
  This is where you should add screens that don't have the Drawer, here is an example how to.
  ...inferRoute({ NewScreenExample }), */
  },
  loginsStackNavConfig
);
<%_ } _%>

export default createStackNavigator(
  {
    <%_ if (features.login) { _%>
    ...inferRoute({ InitialLoading }),
    [Routes.Login]: {
      screen: loginStack
    },
    <%_ } _%>
    [Routes.Home]: {
      <%_ if (features.drawer) { _%>
        screen: drawerStack,
      <%_ } else if (features.tabs && !features.drawer) { _%>
      screen: createBottomTabNavigator(
        {
          ...inferRoute({ Tab1: Home }),
          ...inferRoute({ Tab2: Home })
        },
        tabNavConfig
      ),
      <%_ } else { _%>
      screen: Home,
      <%_ } _%>
      navigationOptions: screensNavOptions[Routes.Home]
    }
  },
  mainStackNavConfig
);
